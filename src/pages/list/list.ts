import { Block } from '../../core/block';
import template from './list.hbs?raw';
import { ButtonCallback, Input, Message, Link, Dialog, RemoveDialog } from "../../components";
import { ValidationRule } from "../../utils/validation.ts";

interface ListPageProps {
    contacts?: unknown[];
    onSend?: (_message: string) => void;
    [key: string]: unknown;
}

export class ListPage extends Block<ListPageProps> {
    constructor(context: ListPageProps = {}) {
        super({
            ...context
        });
    }

    init() {
        this.children.link = new Link({
            page: 'profile',
            position: 'center',
            style: 'chats',
            name: '–ü—Ä–æ—Ñ–∏–ª—å >'
        });

        this.children.inputSearch = new Input({
            class: '--search',
            name: 'search',
            id: 'search',
            type: 'text',
            placeholder: 'üîçÔ∏é –ü–æ–∏—Å–∫',
            autocomplete: 'search',
            validateRule: 'search' as ValidationRule
        });

        this.setProps({
            contacts: this.props.contacts || []
        });

        this.children.dialogIncoming1 = new Dialog({
            type: 'incoming',
            content: '–ü—Ä–∏–≤–µ—Ç! –°–º–æ—Ç—Ä–∏, —Ç—É—Ç –≤—Å–ø–ª—ã–ª –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –∫—É—Å–æ–∫ –ª—É–Ω–Ω–æ–π –∫–æ—Å–º–∏—á–µ—Å–∫–æ–π –∏—Å—Ç–æ—Ä–∏–∏ ‚Äî ' +
                '–ù–ê–°–ê –≤ –∫–∞–∫–æ–π-—Ç–æ –º–æ–º–µ–Ω—Ç –ø–æ–ø—Ä–æ—Å–∏–ª–∞ –•–∞—Å—Å–µ–ª—å–±–ª–∞–¥ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥–µ–ª—å SWC –¥–ª—è –ø–æ–ª–µ—Ç–æ–≤ –Ω–∞ –õ—É–Ω—É. ' +
                '–°–µ–π—á–∞—Å –º—ã –≤—Å–µ –∑–Ω–∞–µ–º —á—Ç–æ –∞—Å—Ç—Ä–æ–Ω–∞–≤—Ç—ã –ª–µ—Ç–∞–ª–∏ —Å –º–æ–¥–µ–ª—å—é 500 EL ‚Äî –∏ –∫ —Å–ª–æ–≤—É –≥–æ–≤–æ—Ä—è, ' +
                '–≤—Å–µ —Ç—É—à–∫–∏ —ç—Ç–∏—Ö –∫–∞–º–µ—Ä –≤—Å–µ –µ—â–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –õ—É–Ω—ã, ' +
                '—Ç–∞–∫ –∫–∞–∫ –∞—Å—Ç—Ä–æ–Ω–∞–≤—Ç—ã —Å —Å–æ–±–æ–π –∑–∞–±—Ä–∞–ª–∏ —Ç–æ–ª—å–∫–æ –∫–∞—Å—Å–µ—Ç—ã —Å –ø–ª–µ–Ω–∫–æ–π.',
            time: '11:56'
        });

        this.children.dialogIncoming2 = new Dialog({
            type: 'incoming',
            content: '–•–∞—Å—Å–µ–ª—å–±–ª–∞–¥ –≤ –∏—Ç–æ–≥–µ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–ª SWC –¥–ª—è –∫–æ—Å–º–æ—Å–∞, –Ω–æ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ' +
                '–∏ –Ω–∞ —Ä–∞–∫–µ—Ç—É –æ–Ω–∏ —Ç–∞–∫ –Ω–∏–∫–æ–≥–¥–∞ –∏ –Ω–µ –ø–æ–ø–∞–ª–∏. –í—Å–µ–≥–æ –∏—Ö –±—ã–ª–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ 25 —à—Ç—É–∫, ' +
                '–æ–¥–Ω—É –∏–∑ –Ω–∏—Ö –Ω–µ–¥–∞–≤–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ –∑–∞ 45000 –µ–≤—Ä–æ.',
            time: '11:56'
        });

        this.children.dialogIncomingImage = new Dialog({
            type: 'incoming',
            Image: true,
            content: 'camera.png',
            time: '11:56'
        });

        this.children.dialogOutgoing = new Dialog({
            type: 'outgoing',
            content: '–ö—Ä—É—Ç–æ!',
            time: '12:00'
        });

        this.children.inputMessage = new Message({
            id: 'message',
            placeholder: '–°–æ–æ–±—â–µ–Ω–∏–µ',
            name: 'message',
            validateRule: 'message' as ValidationRule,
            errorText: '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—É—Å—Ç—ã–º'
        });

        this.children.sendButton = new ButtonCallback({
            class: 'message-input__send-btn',
            title: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å',
            type: 'button',
            content: `
                <span class="message-input__send-icon">
                    <span class="message-input__send-icon-line-1"></span>
                    <span class="message-input__send-icon-line-2"></span>
                    <span class="message-input__send-icon-line-3"></span>
                </span>
            `,
            events: {
                click: (e: Event) => {
                    console.log("–ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–∂–∞—Ç–∞");
                    e.preventDefault();
                    const messageComponent = this.children.inputMessage as Message;

                    const isValid = messageComponent.validate();

                    if (isValid) {
                        const message = messageComponent.getValue();
                        this.props.onSend?.(message);
                        messageComponent.setValue("");
                    }
                }
            }
        });

        this.children.removeDialog = new RemoveDialog({
            title: '–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        });
    }

    protected render(): DocumentFragment {
        return this.compile(template, this.props);
    }
}
